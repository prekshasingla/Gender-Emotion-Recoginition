shiny::runApp('Downloads/voice-gender-master/Web')
shiny::runApp('Documents/GenderVoice')
library(shiny)
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
shiny::runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
gender <- function(filepath) {
" if (model == 1) {
print('Using model: SVM')
set.seed(777)
genderSvm <- svm(label ~ ., data=train, gamma=0.21, cost=8)
#predictSvm <- predict(genderSvm, train)
#table(predictSvm, train$label)
fit <- genderSvm
}
else if (model == 2) {
print('Using model: Random Forest')
genderForest <- randomForest(label ~ ., data=train)
fit <- genderForest
}
else if (model == 3) {
print('Using model: GLM')
genderLog <- glm(label ~ ., data=train, family='binomial')
fit <- genderLog
}
"
result <- specan3(filepath)
test1 <- result$acoustics
test1$duration <- NULL
test1$sound.files <- NULL
test1$selec <- NULL
test1$peakf <- NULL
test1 <- test1[complete.cases(test1)]
test1
wave <- result$wave
#test1 <- as.matrix(test1)
setwd("/Users/prekshasingla/Documents/GenderVoice/")
data = read.csv("voice.csv")
#males$label <- 1
#females$label <- 2
#data <- rbind(males, females)
#data$label <- factor(data$label, labels=c('female', 'male'))
set.seed(777)
spl <- sample.split(data$label, 0.7)
train <- subset(data, spl == TRUE)
test <- subset(data, spl == FALSE)
#write.table(test, file='testset.csv', sep=',', row.names=F)
#write.table(train, file='trainset.csv', sep=',', row.names=F)
genderLog <- glm(label ~ ., data=train, family='binomial')
genderCART <- rpart(label ~ ., data=train, method='class')
prp(genderCART)
genderForest <- randomForest(label ~ ., data=train)
predictForest <- predict(genderForest, newdata=train)
table(train$label, predictForest)
#predictForest <- predict(genderForest, newdata=test)
#table(test$label, predictForest)
predictForest1 <- predict(genderForest, newdata=test1)
print(predictForest1)
#table(test$label, predictForest)
predictForest <- predict(genderForest, newdata=test1,type = "prob")[,2]
print(predictForest)
#set.seed(777)
#genderSvm <- svm(label ~ ., data=train, gamma=0.21, cost=8)
if(predictForest > 0.5){
test1$label<-"male"
}
if(predictForest <= 0.5){
test1$label<-"female"
}
flag <- -1
if(!file.exists("voice1.csv")){
write.table(test1, file='voice1.csv', sep=',', row.names=F)
flag<-0
}
if(flag==-1){
write.table(test1, file='voice1.csv', sep=',',col.names = F, row.names=F, append = TRUE)
}
#return (test1$label)
list(label = test1$label, wave = wave)
"if (model != 3) {
result <- predict(fit, newdata=acoustics)
print(result)
}
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
shiny::runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
predictForest <- predict(genderForest, newdata=test1,type = "prob")[,3]
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
fileName <- basename(filepath)
runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
library(tuneR)
shiny::runApp('Documents/GenderVoice')
runApp('Documents/GenderVoice')
#packages <- c('tuneR', 'seewave', 'fftw', 'caTools', 'randomForest', 'warbleR', 'mice', 'e1071', 'rpart', 'rpart-plot', 'xgboost', 'e1071')
#if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
#  install.packages(setdiff(packages, rownames(installed.packages())))
#}
library(tuneR)
library(seewave)
library(caTools)
library(rpart)
library(rpart.plot)
library(randomForest)
library(warbleR)
library(xgboost)
library(e1071)
specan3 <- function(){
bp<- c(0,22)
wl<- 2048
threshold<- 5
start<-0
end<-20
setwd("/Users/prekshasingla/Documents/GenderVoice/")
r <- tuneR::readWave('3.wav' ,from = start, to = end, units = "seconds")
r
b<- bp
if(b[2] > ceiling(r@samp.rate/2000) - 1) b[2] <- ceiling(r@samp.rate/2000) - 1
songspec <- seewave::spec(r, f = r@samp.rate, plot = FALSE)
analysis <- seewave::specprop(songspec, f = r@samp.rate, flim = c(0, 280/1000), plot = FALSE)
meanfreq <- analysis$mean/1000
sd <- analysis$sd/1000
median <- analysis$median/1000
Q25 <- analysis$Q25/1000
Q75 <- analysis$Q75/1000
IQR <- analysis$IQR/1000
skew <- analysis$skewness
kurt <- analysis$kurtosis
sp.ent <- analysis$sh
sfm <- analysis$sfm
mode <- analysis$mode/1000
centroid <- analysis$cent/1000
peakf <- 0
ff <- seewave::fund(r, f = r@samp.rate, ovlp = 50, threshold = threshold,
fmax = 280, ylim=c(0, 280/1000), plot = FALSE, wl = wl)[, 2]
meanfun<-mean(ff, na.rm = T)
minfun<-min(ff, na.rm = T)
maxfun<-max(ff, na.rm = T)
y <- seewave::dfreq(r, f = r@samp.rate, wl = wl, ylim=c(0, 280/1000), ovlp = 0, plot = F, threshold = threshold, bandpass = b * 1000, fftw = TRUE)[, 2]
meandom <- mean(y, na.rm = TRUE)
mindom <- min(y, na.rm = TRUE)
maxdom <- max(y, na.rm = TRUE)
dfrange <- (maxdom - mindom)
duration <- (end - start)
changes <- vector()
for(j in which(!is.na(y))){
change <- abs(y[j] - y[j + 1])
changes <- append(changes, change)
}
if(mindom==maxdom) modindx<-0 else modindx <- mean(changes, na.rm = T)/dfrange
label<--1
x<-c(duration,meanfreq, sd, median, Q25, Q75, IQR, skew, kurt, sp.ent, sfm, mode,
centroid, peakf, meanfun, minfun, maxfun, meandom, mindom, maxdom, dfrange, modindx,label)
wave <<- r
names(x) <- c( "duration","meanfreq", "sd", "median", "Q25", "Q75", "IQR", "skew", "kurt", "sp.ent",
"sfm","mode", "centroid", "peakf", "meanfun", "minfun", "maxfun", "meandom", "mindom", "maxdom", "dfrange", "modindx","label")
return(list(acoustics = x, wave = wave))
}
result <- specan3()
test1 <- result$acoustics
test1$duration <- NULL
test1$sound.files <- NULL
test1$selec <- NULL
test1$peakf <- NULL
test1 <- test1[complete.cases(test1)]
test1
emotion <- getEmotion(test1)
emotion
wave <- result$wave
setwd("/Users/prekshasingla/Documents/GenderVoice/")
data = read.csv("voice.csv")
set.seed(777)
spl <- sample.split(data$label, 0.7)
train <- subset(data, spl == TRUE)
test <- subset(data, spl == FALSE)
#genderLog <- glm(label ~ ., data=train, family='binomial')
genderCART <- rpart(label ~ ., data=train, method='class')
prp(genderCART)
predictCART <- predict(genderCART,test1)
predictCART
genderForest <- randomForest(label ~ ., data=train)
predictForest <- predict(genderForest, newdata=train)
table(train$label, predictForest)
predictForest <- predict(genderForest, newdata=test)
table(test$label, predictForest)
predictForest1 <- predict(genderForest, newdata=test1)
print(predictForest1)
#table(test$label, predictForest)
predictForest <- predict(genderForest, newdata=test1,type = "prob")[,2]
print(predictForest)
"SVM"
set.seed(777)
genderSvm <- svm(label ~ ., data=train, gamma=0.21, cost=8, probability=TRUE)
newdata <- data.frame(test1)
predictSvm <- predict(genderSvm, newdata, probability=TRUE)
predictSvm
table(predictSvm, test1$label)
getEmotion <- function(test1){
setwd("/Users/prekshasingla/Documents/GenderVoice/")
data = read.csv("emotion.csv")
set.seed(772)
spl <- sample.split(data$label, 0.7)
train <- subset(data, spl == TRUE)
test <- subset(data, spl == FALSE)
genderCART <- rpart(label ~ ., data=train, method='class')
prp(genderCART)
predictCART <- predict(genderCART,test1)[,2]
set.seed(772)
genderForest <- randomForest(label ~ ., data=train)
predictForest1 <- predict(genderForest, newdata=test1)
set.seed(772)
genderSvm <- svm(label ~ ., data=train, gamma=0.21, cost=8, probability=TRUE)
newdata <- data.frame(test1)
predictSvm <- predict(genderSvm, newdata, probability=TRUE)
print(predictForest)
return (predictForest1)
}
r <- tuneR::readWave(fileName ,from = start, to = end, units = "seconds")
runApp()
runApp()
